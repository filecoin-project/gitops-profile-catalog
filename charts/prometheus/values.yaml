secrets:
  url: https://github.com/filecoin-project/gitops-profile-catalog
  path: "./secrets/prometheus"
  serviceAccountName: kustomize-controller

kube-prometheus-stack:
  fullnameOverride: weaveworks-prometheus
  enabled: true
  grafana:
    enabled: false
  alertManager:
    enabled: true
    alertmanagerSpec:
      replicas: 3
    templateFiles:
      slack.tmpl: >-
        {{ define "slack.filecoin.text" }}
        {{ range .Alerts -}}
        *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}
        *Description:* {{ .Annotations.description }}
        *Details:*
         {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
         {{ end }}
        {{ end }}
        {{ end }}
    config:
      route:
        group_by: ["alertname", "cluster"]
        group_wait: 500ms
        receiver: "null"
        group_interval: 500ms
        repeat_interval: 1d
      templates:
        - '/etc/alertmanager/config/slack.tmpl'

  prometheus:
    prometheusSpec:
      replicaExternalLabelName: __replica__
      thanos:
        objectStorageConfig:
          key: objstore.yml
          name: thanos-storage-config
    serviceAccount:
      annotations:
        eks.amazonaws.com/role-arn: ""
    thanosIngress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
        nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
        nginx.ingress.kubernetes.io/auth-tls-secret: "flux-system/thanos-server-tls"
      hosts:
      - thanos-sidecar.example
      paths:
      - /
      pathType: ImplementationSpecific
      tls:
      - secretName: thanos-sidecar-tls
        hosts:
        - thanos-sidecar.example

prometheus-pushgateway:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: kube-system

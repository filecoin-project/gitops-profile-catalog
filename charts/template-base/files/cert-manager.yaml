{{- $currentScope := . -}}
{{- range $profile := .Values.requiredProfiles }}
{{- if eq $profile.name "cert-manager" }}
{{- with $currentScope -}}
- apiVersion: iam.aws.crossplane.io/v1beta1
  kind: Policy
  metadata:
    name: '{{`{{ .params.CLUSTER_NAME }}`}}-cert-manager'
    namespace: '{{`{{ .params.NAMESPACE }}`}}'
  spec:
    providerConfigRef:
      name: '{{`{{ .params.AWS_ACCOUNT_NAME }}`}}-provider'
    deletionPolicy: Delete
    forProvider:
      tags:
      - key: managedBy
        value: Weave GitOps Enterprise 
      - key: createdBy
        value: Crossplane 
      - key: cluster
        value: '{{`{{ .params.CLUSTER_NAME }}`}}'
      description: "For cert-manager"
      name: '{{`{{ .params.CLUSTER_NAME }}`}}-cert-manager'
      document: |
        {
            "Statement": [
                {
                    "Action": "route53:GetChange",
                    "Effect": "Allow",
                    "Resource": "arn:aws:route53:::change/*",
                    "Sid": ""
                },
                {
                    "Action": [
                        "route53:ListResourceRecordSets",
                        "route53:ChangeResourceRecordSets"
                    ],
                    "Effect": "Allow",
                    "Resource": "arn:aws:route53:::hostedzone/*",
                    "Sid": ""
                },
                {
                    "Action": "route53:ListHostedZonesByName",
                    "Effect": "Allow",
                    "Resource": "*",
                    "Sid": ""
                }
            ],
            "Version": "2012-10-17"
        }
- apiVersion: iam.aws.crossplane.io/v1beta1
  kind: Role
  metadata:
    name: '{{`{{ .params.CLUSTER_NAME }}`}}-cert-manager'
    namespace: '{{`{{ .params.NAMESPACE }}`}}'
  spec:
    providerConfigRef:
      name: '{{`{{ .params.AWS_ACCOUNT_NAME }}`}}-provider'
    forProvider:
      tags:
      - key: managedBy
        value: Weave GitOps Enterprise 
      - key: createdBy
        value: Crossplane 
      - key: cluster
        value: '{{`{{ .params.CLUSTER_NAME }}`}}'
      assumeRolePolicyDocument: |
        {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "",
                    "Effect": "Allow",
                    "Principal": {
                        "Federated": "arn:aws:iam::{{ template "template-base.accountID" . }}:oidc-provider/oidc.eks.{{`{{ .params.AWS_REGION }}`}}.amazonaws.com/id/${EKS_CLUSTER_ID}"
                    },
                    "Action": "sts:AssumeRoleWithWebIdentity",
                    "Condition": {
                        "StringEquals": {
                            "oidc.eks.{{`{{ .params.AWS_REGION }}`}}.amazonaws.com/id/${EKS_CLUSTER_ID}:sub": [
                                "system:serviceaccount:flux-system:cert-manager",
                                "system:serviceaccount:flux-system:cert-manager-webhook"
                            ]
                        }
                    }
                }
            ]
        }
- apiVersion: iam.aws.crossplane.io/v1beta1
  kind: RolePolicyAttachment
  metadata:
    name: '{{`{{ .params.CLUSTER_NAME }}`}}-cert-manager'
    namespace: '{{`{{ .params.NAMESPACE }}`}}'
  spec:
    providerConfigRef:
      name: '{{`{{ .params.AWS_ACCOUNT_NAME }}`}}-provider'
    forProvider:
      policyArnRef:
        name: '{{`{{ .params.CLUSTER_NAME }}`}}-cert-manager'
      roleNameRef:
        name: '{{`{{ .params.CLUSTER_NAME }}`}}-cert-manager'
{{- end -}}
{{- end -}}
{{- end -}}
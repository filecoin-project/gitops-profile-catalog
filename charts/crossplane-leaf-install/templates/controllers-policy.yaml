
apiVersion: iam.aws.crossplane.io/v1beta1
kind: Policy
metadata:
  name: {{ .Values.awsAccountName }}-controllers
  # annotations:
  #   crossplane.io/external-name: "arn:aws:iam::407967248065:policy/${CLUSTER_NAME}-external-dns"
spec:
  providerConfigRef:
    name: {{ .Values.awsAccountName }}-provider
  deletionPolicy: Delete
  forProvider:
    description: "For the Kubernetes Cloud Provider AWS Control Plane"
    name: wge-{{ .Values.environment }}-controllers.cluster-api-provider-aws.sigs.k8s.io
    document: |
      {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Action": [
                      "ec2:AllocateAddress",
                      "ec2:AssociateRouteTable",
                      "ec2:AttachInternetGateway",
                      "ec2:AuthorizeSecurityGroupIngress",
                      "ec2:CreateInternetGateway",
                      "ec2:CreateNatGateway",
                      "ec2:CreateRoute",
                      "ec2:CreateRouteTable",
                      "ec2:CreateSecurityGroup",
                      "ec2:CreateSubnet",
                      "ec2:CreateTags",
                      "ec2:CreateVpc",
                      "ec2:ModifyVpcAttribute",
                      "ec2:DeleteInternetGateway",
                      "ec2:DeleteNatGateway",
                      "ec2:DeleteRouteTable",
                      "ec2:DeleteSecurityGroup",
                      "ec2:DeleteSubnet",
                      "ec2:DeleteTags",
                      "ec2:DeleteVpc",
                      "ec2:DescribeAccountAttributes",
                      "ec2:DescribeAddresses",
                      "ec2:DescribeAvailabilityZones",
                      "ec2:DescribeInstances",
                      "ec2:DescribeInternetGateways",
                      "ec2:DescribeImages",
                      "ec2:DescribeNatGateways",
                      "ec2:DescribeNetworkInterfaces",
                      "ec2:DescribeNetworkInterfaceAttribute",
                      "ec2:DescribeRouteTables",
                      "ec2:DescribeSecurityGroups",
                      "ec2:DescribeSubnets",
                      "ec2:DescribeVpcs",
                      "ec2:DescribeVpcAttribute",
                      "ec2:DescribeVolumes",
                      "ec2:DetachInternetGateway",
                      "ec2:DisassociateRouteTable",
                      "ec2:DisassociateAddress",
                      "ec2:ModifyInstanceAttribute",
                      "ec2:ModifyNetworkInterfaceAttribute",
                      "ec2:ModifySubnetAttribute",
                      "ec2:ReleaseAddress",
                      "ec2:RevokeSecurityGroupIngress",
                      "ec2:RunInstances",
                      "ec2:TerminateInstances",
                      "tag:GetResources",
                      "elasticloadbalancing:AddTags",
                      "elasticloadbalancing:CreateLoadBalancer",
                      "elasticloadbalancing:ConfigureHealthCheck",
                      "elasticloadbalancing:DeleteLoadBalancer",
                      "elasticloadbalancing:DescribeLoadBalancers",
                      "elasticloadbalancing:DescribeLoadBalancerAttributes",
                      "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
                      "elasticloadbalancing:DescribeTags",
                      "elasticloadbalancing:ModifyLoadBalancerAttributes",
                      "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                      "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                      "elasticloadbalancing:RemoveTags",
                      "autoscaling:DescribeAutoScalingGroups",
                      "autoscaling:DescribeInstanceRefreshes",
                      "ec2:CreateLaunchTemplate",
                      "ec2:CreateLaunchTemplateVersion",
                      "ec2:DescribeLaunchTemplates",
                      "ec2:DescribeLaunchTemplateVersions",
                      "ec2:DeleteLaunchTemplate",
                      "ec2:DeleteLaunchTemplateVersions",
                      "ec2:DescribeKeyPairs"
                  ],
                  "Resource": [
                      "*"
                  ],
                  "Effect": "Allow"
              },
              {
                  "Action": [
                      "autoscaling:CreateAutoScalingGroup",
                      "autoscaling:UpdateAutoScalingGroup",
                      "autoscaling:CreateOrUpdateTags",
                      "autoscaling:StartInstanceRefresh",
                      "autoscaling:DeleteAutoScalingGroup",
                      "autoscaling:DeleteTags"
                  ],
                  "Resource": [
                      "arn:*:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/*"
                  ],
                  "Effect": "Allow"
              },
              {
                  "Condition": {
                      "StringLike": {
                          "iam:AWSServiceName": "autoscaling.amazonaws.com"
                      }
                  },
                  "Action": [
                      "iam:CreateServiceLinkedRole"
                  ],
                  "Resource": [
                      "arn:*:iam::*:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling"
                  ],
                  "Effect": "Allow"
              },
              {
                  "Condition": {
                      "StringLike": {
                          "iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
                      }
                  },
                  "Action": [
                      "iam:CreateServiceLinkedRole"
                  ],
                  "Resource": [
                      "arn:*:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing"
                  ],
                  "Effect": "Allow"
              },
              {
                  "Condition": {
                      "StringLike": {
                          "iam:AWSServiceName": "spot.amazonaws.com"
                      }
                  },
                  "Action": [
                      "iam:CreateServiceLinkedRole"
                  ],
                  "Resource": [
                      "arn:*:iam::*:role/aws-service-role/spot.amazonaws.com/AWSServiceRoleForEC2Spot"
                  ],
                  "Effect": "Allow"
              },
              {
                  "Action": [
                      "iam:PassRole"
                  ],
                  "Resource": [
                      "arn:*:iam::*:role/*.cluster-api-provider-aws.sigs.k8s.io"
                  ],
                  "Effect": "Allow"
              },
              {
                  "Action": [
                      "secretsmanager:CreateSecret",
                      "secretsmanager:DeleteSecret",
                      "secretsmanager:TagResource"
                  ],
                  "Resource": [
                      "arn:*:secretsmanager:*:*:secret:aws.cluster.x-k8s.io/*"
                  ],
                  "Effect": "Allow"
              }
          ]
      }   
